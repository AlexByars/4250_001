Tanner Collins (I did the driving one as well)
  Must take input from mouse
  Must have display and ball object
  Can allow user to draw obstacles
  Can have obstacles bigger than 3 pixels

Jackson Coffey
  Must bounce ball off of the sides of the screen
  Must bounce ball off of user created obstacles larger than 3px
  Must have user input
=======

Janine Day
  •	The program must have a ball
  •	The ball needs the ability to bounce
  •	The mouse needs the ability to draw obstacles
  •	The program will need to detect the location of the ball vs obstacles and sides of screen
  •	The program must respond to user actions within 1 second
  •	The program must allow ball to move concurrently with user actions
=======

Calen Cummings
  Should show a ball moving on the screen
  Should allow the user to draw shapes
  Must have the ball bounce off of the screen edges
  Must have the ball bounce off of any user-drawn shapes
  Must have user shapes disappear after ball bounces off
  May have user shapes remain in place after drawing
  Must be able to determine drawn shape size
  Must make ball bounce if the drawn shape is big enough (> 3px)
  Should have the ball move at a constant speed
  May have ball change colors when it bounces
  Should be easy to look at (accessibility)
  Must work with any size screen (compatibility/portability)
  Must only allow users to draw closed shapes
  May have screen change colors when ball hits an edge
=======

Kyle Darnell
-	The program must be able to detect when the ball is in contact with the side of the screen.
-	The ball must be continuously moving
-	The program must support user input for obstacle drawing 
-	The program must be able to detect the pixel size of the user drawn obstacle
-	The program must be able to determine if a user drawn object is more/less than 3 pixels
-	Must reject any object less than 3 pixels
-	Must be able to detect when the ball is in contact with a user drawn obstacle 
-	Ball must bounce in the correct direction when bouncing
-	User should be able to clear drawn obstacles from the screen
-	User should be able to restart the program, ball bouncing
-	There should be an ink limit
- Drawn objects should removed after being hit
=======

Joshua Thomas
    Must have ball object
    Ball Must constantly move accross screen
    Must have outer walls to ensure ball dosn't leave visable area
    Ball must bounce off structures that consist of at least 4 pixels
    Must respond to mouse actions
    Must create obstacles using mouse actions

=======
Isaiah Jayne
  1.	Must be able to display the ball moving across the screen
  2.	Must be able to recognize when the ball collides with edges/lines
  3.	Must be able to calculate the bounce trajectory of the ball off of edges/lines
  4.	Must allow user to draw lines of > 3 pixel length on the screen with mouse pointer
  5.	Must recognize when user wants and doesn’t want to draw lines
  6.	Must be able to start and stop ball program through some easily accessible means
  7.	Must be compliant with different screen sizes

=======
Adelaide Damrau
	• Need a ball, how big? Characteristics?
	• Need a screen environment, how big? Characteristics?
	• Measure obstacle size in pixels
	• Allow user to draw obstacle with mouse on screen with ball
	• If obstacle size > 3 pixels, bounce ball
		○ Angle of bounce?
	• When to have it by?
	• How much can I spend?
	• Programming language?
	• Count points?

Hannah Taylor
	Should run until a key is pressed on the keyboard
	Should move the ball at a constant rate across the screen
	Should draw user’s mouse shapes on the screen
	Should erase mouse drawings after the ball hits it
	Ball must change directions when hits a surface
	Direction should be calculated using angles it was moving in
	Ball can change color as it moves across the screen
	Can change color when it hits a surface
	Ball must be at least 50 pixels in diameter
 

